server.port=8083
spring.datasource.url=jdbc:postgresql://localhost:5432/ExampleProductDB
spring.datasource.username=postgres
spring.datasource.password=test

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


spring.kafka.bootstrap-servers=kafka:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=Product:com.javaexample.ProductService.Entity.Product



spring.kafka.topic.product-topic.name=product-topic

spring.kafka.bootstrap-servers=kafka:9093
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class = org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping= Product : com.javaexample.ProductService.Entity.Product
spring.kafka.consumer.group-id=kafka-group


spring.kafka.topic.product-stoc-topic.name=product-stock-topic


eureka.client.serviceUrl.defaultZone=http://discovery-server:8888/eureka/
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
